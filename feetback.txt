Привіт перевірив ваше ТЗ та повертаюсь до вас з фідбеком.

Так як більшість кандидатів зробили ті самі помилки я вирішив написати шаблон відповіді щоб не витрачати час на правки для кожного кандидата.

Почну з порад що до ваших майбутніх тестових.

1 Ніколи, ніколи, та ще раз - НІКОЛИ не робіть лишнього у вашому ТЗ, якщо щось не було вказано, значить цього не потрібно робити. Це стосується людей які для такого завдання використали Redux, MUI, yup, formik.

Часто ТЗ це завдання яке показує як ви будете працювати, чи будете ви думати про продуктивність вашого додатку, чи враховуєте ризики, чи думаєте про рентабельність використовувати щось.

Уявіть проект в якому при додаванні дуже простого функціоналу, розробники будуть на кожному кроці підключати існуючі бібліотеки щоб не писати власного коду.

Як результат у деяких людей, проект який мав бути супер легким (по пам*яті) та швидким - виявився важким (через бібліотеки) та не дуже швидким через невірне написання коду.

Деякі з вас не встигли здати вчасно через те що робили деплой вашого завдання, для чого? Ви самі собі ускладнюєте життя.

Крім того, чим більше всього ви напишете, тим більше шансів що десь ви зробите помилку.

2 Не приступайте до ТЗ поки не зрозуміли його хоча б на 90% і не перечитали уважно усі його деталі.

У ТЗ не було сказано що статус має змінюватись та що він має бути чекбоксом, але погодьтесь що це дивно що todo list має статус але його не можна змінити. Ті хто зробив це чекбоксом, або запитав за це та реалізував матимуть маленьку перевагу.

Багато людей скинули завдання в особисті, хоча в повідомленні було чітко сказано що ТЗ потрібно надсилати саме на пошту.

Часто в процесі відбору участь приймає декілька людей і хтось міг не пройти тільки через те що він не скинув на пошту. Цього разу я перевірив усі, та запевняю вас, що з іншими ТЗ в інші компанії все може бути не так добре, технічні люди що очікують ТЗ на пошту його не отримають, а рекрутери яким ви скинули своє ТЗ можуть просто його пропустити або не побачити.

3 Часто легкі завдання даються не для того щоб ви їх вирішили на швидкість, або просто зробили.

Якщо завдання вам здалось легким, подумайте, що можна покращити, можливо тут є якийсь момент який ви можете пропустити, адже на легких завданнях здебільшого кандидати роблять дурні помилки, через те що вони їх недооцінюють.

За що можна було отримати бали:

1 Typescript - Використання у вашому завданні

2 React.memo для ваших todoItem (у нішому випадку при створенні нової todo у вас рендерились заново всі todo що впливає на продуктивність.

3 Делегування івенту щоб не навішувати onClick на кожну todo.

4 Неконтрольовані інпути, у даному завданні нам не потрібно було створювати стейти для значень інпутів, адже ми завжди можемо отримати їх в нашій формі.

5 Модалка на верхньому рівні і для неї немає двох стейтів:

Багато з вас створювали 2 стейти, перший activeTodo, другий isOpen, можна обійтись тільки activeTodo оскільки якщо воно є, значить треба модалка, якщо ні, тоді закрита.

Опишу найгірший випадок і поясню в чому проблема.

Були кандидати які поклали всю логіку в App і там було 7 стейтів

1 title

2 titleError

3 description

4 descriptionError

5 isOpen

6 activeTodo

7 todos

Якщо ви знаєте як працюють стейти ви маєте здогадатись що відбувалось якщо юзер вже мав 100 тасок і хотів створити ще одну:

При кожному новому символі в інпуті, ви ререндерили всі 100 завдань, одже, якщо у вас був опис на 100 символів, то ви зробили ререндер для завдань 100 разів, тобто кожне завдання рендерилось по 100 разів без потреби.

Якщо ви отримали це повідомлення, хтось вирішив завдання краще за вас, я не вважаю що це причина засмучуватись, адже після такого фідбеку ви зможете глянути на нові ТЗ з іншого боку та стати ще кращими. Я вірю що у вас все вийде якщо ви будете продовжувати цей складний шлях.

Від себе скажу що потрапив на роботу через пів року з початку пошуку і пройшов більше 10 співбесід ще 6 років тому, головне продовжувати боротьбу та йти до висот. Сподіваюсь колись побачу вас на своїх проектах)